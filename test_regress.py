# from . import main_page
from .main_page import MainPage
import time
from selenium.webdriver.common.by import By
from datetime import datetime

def test_pagination_in_volunteer_list(browser):
    #–ø–µ—Ä–µ—Ö–æ–¥ —Å 1 –Ω–∞ 2 —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ —Å–ø–∏—Å–∫–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤
    link="https://feedapp-dev.insomniafest.ru/login"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    time.sleep(1)
    page.login_admin()
    time.sleep(1)
    page.pagination()
    active_page = browser.find_element(By.CLASS_NAME, "ant-pagination-item-active")
    time.sleep(1)
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–µ–µ—Ç 2 –≤ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏
    assert "2" in active_page.text, "–û—à–∏–±–∫–∞: –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"


def test_pagination_in_feed_history(browser):
    #–ø–µ—Ä–µ—Ö–æ–¥ —Å 1 –Ω–∞ 2 —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–∏—Ç–∞–Ω–∏—è.
    link = "https://feedapp-dev.insomniafest.ru/feed-transaction"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    time.sleep(1)
    page.meal_history_pagination()
    active_page = browser.find_element(By.CLASS_NAME, "ant-pagination-item-active")
    time.sleep(1)
    #–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–µ–µ—Ç 2 –≤ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏
    assert "2" in active_page.text, "–û—à–∏–±–∫–∞: –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"


def test_create_new_meal(browser):
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–µ–º –ø–∏—â–∏, —Å–≤–µ—Ä—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —É—Ä–ª –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —á—Ç–æ –¥–∞—Ç–∞ –∫—Ä–∞–π–Ω–µ–π –∑–∞–ø–∏—Å–∏ - —Å–µ–≥–æ–¥–Ω—è
    link = "https://feedapp-dev.insomniafest.ru/feed-transaction"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    page.go_to_create_new_meal()
    page.create_new_meal()
    time.sleep(1)
    first_row_text = page.meal_table()
    today_date = datetime.now().strftime("%d/%m/%y")
    # –ø—Ä–∏–≤–µ—Ä–∫–∞ —É—Ä–ª–∞
    assert browser.current_url == "https://feedapp-dev.insomniafest.ru/feed-transaction?pageSize=10&current=1"
    # –ø—Ä–∏–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –ø–æ—Å—Ä–µ–¥–Ω–µ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏. –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ - –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –∫–æ—Ä–º–∏–ª–∏ —Ä—É–∫–∞–º–∏.
    assert  today_date in first_row_text, f"–û—à–∏–±–∫–∞! –û–∂–∏–¥–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É, –∞ –ø–æ–ª—É—á–∏–ª–∏ {first_row_text}"
    print("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")


def test_delete_created_new_meal(browser):
    # –Ω–µ —Ç–µ—Å—Ç, –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤—ã—à–µ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏.
    link = "https://feedapp-dev.insomniafest.ru/feed-transaction"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    time.sleep(2)
    page.meal_deleting()
    # –ù–µ –º—É—Å–æ—Ä–∏–º, —É–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å, –∞—Å—Å–µ—Ä—Ç –¥–ª—è –∏–Ω—Ñ–æ
    time.sleep(1)
    assert 1==1
    print("üóë –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")

def test_create_group_badge(browser):
    # —Å–æ–∑–¥–∞–µ–º –≤—Ä—É—á–Ω—É—é –≥—Ä—É–ø–ø–æ–≤–æ–π –±–µ–π–¥–∂ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –±–µ–π–¥–∂–µ–π
    link = "https://feedapp-dev.insomniafest.ru/group-badges"
    page = BasePage(browser, link)
    page.open()
    time.sleep(1)
    page.first_window()
    page.login_admin()
    time.sleep(2)
    a = page.badges_counter()
    time.sleep(1)
    print("a =", a)
    page.go_to_create_badge()
    time.sleep(1)
    page.create_badge()
    time.sleep(1)
    b = page.badges_counter()
    print("b =", b)
    assert browser.current_url == "https://feedapp-dev.insomniafest.ru/group-badges"
    assert a+1 == b
    print("‚úÖ –ë–µ–π–¥–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –°—á–µ—Ç—á–∏–∫ —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ 1!")

def test_delete_group_badge(browser):
    # –Ω–µ —Ç–µ—Å—Ç, –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤—ã—à–µ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏.
    link = "https://feedapp-dev.insomniafest.ru/group-badges"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    time.sleep(2)
    pagination_items = browser.find_elements(By.CLASS_NAME, "ant-pagination-item")
    pagination_items[-1].click()
    time.sleep(1)
    last_row = browser.find_elements(By.CSS_SELECTOR, "tr.ant-table-row")[-1]
    columns = last_row.find_elements(By.CSS_SELECTOR, "td")
    column1 = columns[1].text
    # –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–∏—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
    if "autotest" in column1:
        counter1 = page.receive_badges_count()
        page.delete_group_badge()
        counter2 = page.receive_badges_count()
        assert 1==1
        assert counter1 != counter2
        print("–ë–µ–π–¥–∂ —É–¥–∞–ª–µ–Ω!")
    else:
        assert 1==1
        print("–ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å!")

def test_create_custom_field(browser):
    # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
    link = "https://feedapp-dev.insomniafest.ru/volunteers"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    time.sleep(1)
    page.go_to_custom_field_creating()
    time.sleep(1)
    # —Å—á–∏—Ç–∞–µ–º —á–∏—Å–ª–æ —Å—Ç—Ä–æ–∫ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
    rows_before = len(browser.find_elements(By.CSS_SELECTOR, "span.ant-btn-icon"))
    page.go_to_custom_field_creating_2()
    page.create_custom_field()
    time.sleep(1)
    #—Å—á–∏—Ç–∞–µ–º —á–∏—Å–ª–æ —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
    rows_after = len(browser.find_elements(By.CSS_SELECTOR, "tr.ant-table-row"))
    # –∑–∞–¥–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–µ
    last_row = browser.find_elements(By.CSS_SELECTOR, "tr.ant-table-row")[-1]
    columns = last_row.find_elements(By.CSS_SELECTOR, "td")
    column1 = columns[0].text
    column2 = columns[1].text
    # —Å–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å - –Ω–∞—à–∞ –ø–æ 2 –ø—Ä–∏–∑–Ω–∞–∫–∞–º –∏ —á—Ç–æ —Å—á–µ—Ç—á–∏–∫ —á–∏—Å–ª–∞ –ø–æ–ª–µ–π –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ 1
    assert "user" in column1, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!"
    assert "string" in column2, "–¢–∏–ø –ø–æ–ª—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!"
    assert int(rows_before)-4==rows_after, "—á–∏—Å–ª–æ –∑–∞–ø–∏—Å–µ–π –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –Ω–µ –Ω–∞ 1!"
    #–≤ –≤—ã–ø–∞–¥–∞—à–∫–µ —Å–ø–∏—Å–∫–∞ –∫–æ–ª–æ–Ω–æ–∫ 5 –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –í—ã—á–µ—Å—Ç—å 4 - –ø–æ–ª—É—á–∏–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫ + 1 —Å–æ–∑–¥–∞–Ω–Ω—ã–π

def test_delete_created_custom_field(browser):
    link = "https://feedapp-dev.insomniafest.ru/volunteer-custom-fields?sorters[0][field]=id&sorters[0][order]=asc"
    page = BasePage(browser, link)
    page.open()
    page.first_window()
    page.login_admin()
    time.sleep(2)
    last_row = browser.find_elements(By.CSS_SELECTOR, "tr.ant-table-row")[-1]
    columns = last_row.find_elements(By.CSS_SELECTOR, "td")
    column1 = columns[0].text
    if "user" in column1:
        page.delete_row()
        assert 1==1
        print("–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞!")
    else:
        assert 1==1
        print("–ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å!")



def test_add_and_delete_volunteer_from_group_badge(browser):
    #–¥–æ–±–∞–≤–∏—Ç—å, –∞ –∑–∞—Ç–µ–º —É–¥–∞–ª–∏—Ç—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞ –∏–∑ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –±–µ–π–¥–∂–∞
    link = "https://feedapp-dev.insomniafest.ru/group-badges"
    page = BasePage(browser, link)
    page.open()
    time.sleep(1)
    page.first_window()
    page.login_admin()
    #–∏–¥–µ–º –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–µ–π–¥–∂–∏–∫–∞
    page.go_to_edit_badge()
    time.sleep(2)
    #—Ñ–∏–∫—Å–∏—Ä—É–µ–º —á–∏—Å–ª–æ –Ω–∞ —Å—á–µ—Ç—á–∏–∫–µ
    count1 = page.receive_count_of_volunteers_in_group_badge()
    #–¥–æ–±–∞–≤–ª—è–µ–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
    page.add_volunteer_in_group_badge()
    #—Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    time.sleep(1)
    count2 = page.receive_count_of_volunteers_in_group_badge()
    page.save_in_group_badge()
    #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –±–µ–π–¥–∂
    time.sleep(1)
    page.go_to_edit_badge()
    time.sleep(1)
    #—Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫
    count3 = page.receive_count_of_volunteers_in_group_badge()
    #—É–¥–∞–ª—è–µ–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
    time.sleep(1)
    page.delete_volunteer_from_group_badge()
    #—Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å—á—ë—Ç—á–∏–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    count4 = page.receive_count_of_volunteers_in_group_badge()
    page.save_in_group_badge()
    time.sleep(1)
    #–≤ –∞—Å—Å–µ—Ä—Ç–∞—Ö —Å–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ —É—Ä–ª –≥—Ä—É–ø–ø–æ–≤—ã—Ö –±–µ–π–¥–∂–µ–π –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –º—ç—Ç—á —Å—á—ë—Ç—á–∏–∫–æ–≤ –º–µ–∂–¥—É —Å–æ–±–æ–π
    assert browser.current_url == "https://feedapp-dev.insomniafest.ru/group-badges"
    print("–î–æ-", count1, "—á–µ–ª–æ–≤–µ–∫ –≤ –±–µ–π–¥–∂–µ")
    assert count1==count4
    print("–î–æ-", count1, count4, "—á–µ–ª–æ–≤–µ–∫ –≤ –±–µ–π–¥–∂–µ")
    assert count2==count3
    print("–ü–æ—Å–ª–µ-", count3, "—á–µ–ª–æ–≤–µ–∫ –≤ –±–µ–π–¥–∂–µ")

def test_create_new_user(browser):
    #—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
    link = "https://feedapp-dev.insomniafest.ru/volunteers"
    page = BasePage(browser, link)
    page.open()
    time.sleep(1)
    page.first_window()
    page.login_admin()
    # –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
    time.sleep(3)
    counter1 = page.receive_volunteers_count()
    page.go_to_create_user()
    time.sleep(1)
    page.create_user()
    time.sleep(1)
    page.save_in_user_page()
    time.sleep(3)
    counter2 = page.receive_volunteers_count()
    page.find_user()
    user_name = page.check_username_after_editing()
    assert browser.current_url== "https://feedapp-dev.insomniafest.ru/volunteers"
    assert counter1+1 == counter2, "–°—á–µ—Ç—á–∏–∫ –Ω–µ —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ 1!!!"
    assert user_name == "Test_name"

def test_edit_new_user(browser):
    # –Ω–∞–π—Ç–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ
    link = "https://feedapp-dev.insomniafest.ru/volunteers"
    page = BasePage(browser, link)
    page.open()
    time.sleep(1)
    page.first_window()
    page.login_admin()
    time.sleep(3)
    counter1 = page.receive_volunteers_count()
    # –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
    page.find_user()
    page.open_user()
    page.edit_user()
    time.sleep(3)
    user_name = page.check_username_after_editing()
    page.clear_input_field()
    time.sleep(3)
    counter2 = page.receive_volunteers_count()
    assert browser.current_url== "https://feedapp-dev.insomniafest.ru/volunteers"
    assert counter1 == counter2, "–°—á–µ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è!!!"
    assert user_name == "Test_name_1"

def test_delete_new_user(browser):
    # –Ω–∞–π—Ç–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ
    link = "https://feedapp-dev.insomniafest.ru/volunteers"
    page = BasePage(browser, link)
    page.open()
    time.sleep(1)
    page.first_window()
    page.login_admin()
    time.sleep(3)
    counter1 = page.receive_volunteers_count()
    page.find_user()
    page.open_user()
    page.delete_user()
    time.sleep(3)
    page.clear_input_field()
    time.sleep(3)
    counter2 = page.receive_volunteers_count()
    page.check_username_after_deleting()
    counter3 = page.receive_volunteers_count()
    assert browser.current_url == "https://feedapp-dev.insomniafest.ru/volunteers"
    assert counter1 == counter2+1, "–°—á–µ—Ç—á–∏–∫ –Ω–µ —É–º–µ–Ω—å—à–∏–ª—Å—è –Ω–∞ 1!!!"
    assert counter3 == 0

def test_scan_qr(browser):
    link = "https://feedapp-dev.insomniafest.ru/volunteers"
    page = BasePage(browser, link)
    page.open()
    time.sleep(2)
    page.first_window_qr()
    time.sleep(2)
    page.scan_user()
    time.sleep(2)
    assert browser.current_url == "https://feedapp-dev.insomniafest.ru/volunteers"
